---
- hosts: all
  become: yes
  tasks:
    - name: check logging directory
      win_file:
        path: C:\Automation\logs\update
        state: directory

    - name: revoke 30d update block
      win_shell: |
        $pause = (Get-Date).AddDays(0)
        $pause = $pause.ToUniversalTime().ToString( "yyyy-MM-ddTHH:mm:ssZ" )
        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings' -Name 'PauseUpdatesExpiryTime' -Value $pause 

    - name: run update session orchestrator check to clear GUI cached results
      win_shell: |
        Stop-Service -Name BITS,WaaSMedicSvc,WUAUSERV,CryptSvc -Force
        Remove-Item -Path C:\Windows\System32\catroot2 -Recurse -Force
        Remove-Item -Path C:\Windows\SoftwareDistribution -Recurse -Force
        Start-Service -Name BITS,WaaSMedicSvc,WUAUSERV,CryptSvc
        UsoClient RefreshSettings
        UsoClient ScanInstallWait

    - name: get current date and time
      ansible.builtin.shell:
        cmd: date '+%Y%m%d'
        executable: /bin/bash
      register: current_time
      delegate_to: localhost
      changed_when: false

    - name: set log-file name
      ansible.builtin.set_fact:
        log_file_name: "win-updates-log-{{ current_time.stdout | trim }}.txt"

    - name: install updates
      win_updates:
        category_names: '*'
        state: searched
        server_selection: windows_update
        log_path: "C:\\Automation\\logs\\update\\{{ log_file_name }}"
      register: update_result

    - name: apply pending updates
      win_updates:
        category_names: '*'
        state: installed
        server_selection: windows_update
        reboot: true
        reboot_timeout: 1800
        log_path: "C:\\Automation\\logs\\update\\{{ log_file_name }}"
      register: apply_result
      retries: 2
      delay: 60
      until: apply_result is succeeded
      ignore_errors: yes

    - name: output update application results
      debug:
        var: apply_result

    - name: set update block to 30d
      win_shell: |
        $pause = (Get-Date).AddDays(30)
        $pause = $pause.ToUniversalTime().ToString( "yyyy-MM-ddTHH:mm:ssZ" )
        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings' -Name 'PauseUpdatesExpiryTime' -Value $pause
